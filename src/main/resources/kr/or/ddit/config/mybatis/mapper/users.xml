<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="users">
	<!-- Select 된 컬럼과 resultType에 기술된 클래스의 필드 이름이 동일하면 자동으로 값을 넣어준다. -->
	<select id="selectAllUser" resultType="userVo">
		SELECT *
		FROM users ORDER BY user_id
	</select>
	
	<!-- 20210304_LYS_Login3 - 주석 적은 날 기준-->
	<!-- 로그인 구현 -->
	<select id="selectUser" resultType="userVo"
		parameterType="String">
		SELECT *
		FROM users
		WHERE user_id = #{value}
	</select>
	
	<!-- 20210304_LYS_Login3 -->
	<!-- 사용자 추가 - 회원가입 -->
	<insert id="insertUser" parameterType="userVo">
		INSERT INTO users
		(
		user_id, user_pw, user_nm, email, addr1, addr2, zip, mobile, reg_dt, file_no, login_fail_cnt, logout_dt, use
		)
		VALUES
		(
		#{user_id}, #{user_pw}, #{user_nm}, #{email}, #{addr1},	#{addr2}, #{zip}, #{mobile}, sysdate, null, null, sysdate, "Y"
		)
	</insert>
	
	
	<!-- 20210304_LYS_Login3 -->
	<!-- 회원가입시, 아이디 중복체크 -->
	<select id="checkForDuplicateId" parameterType="string" resultType="string">
		SELECT user_id FROM users WHERE user_id=#{user_id}
	</select>	
	
	
	
	
	
	
	
	
	
	<select id="selectPagingUser" resultType="userVo"
		parameterType="pageVo">
		SELECT *
		FROM
		(SELECT ROWNUM rn , a.*
		FROM
		(SELECT *
		FROM
		users
		ORDER BY user_id) a
		WHERE ROWNUM &lt;= #{page} * #{pageSize})
		WHERE
		rn BETWEEN (#{page} - 1) *
		#{pageSize} + 1 AND #{page} * #{pageSize}
	</select>


	<!-- 전체 사용자수 조회 -->
	<select id="selectAllUserCnt" resultType="int">
		SELECT COUNT(*)
		FROM
		users ORDER BY user_id
	</select>


	<!-- 사용자 정보 수정 -->
	<update id="modifyUser" parameterType="userVo">
		UPDATE users SET usernm =
		#{usernm},
		pass = #{pass},
		alias = #{alias},
		addr1 =
		#{addr1},
		addr2 = #{addr2},
		zipcode = #{zipcode},
		filename =#{filename},
		realfilename= #{realfilename}
		WHERE userid = #{userid}
	</update>
<!-- 		reg_dt = #{reg_dt}, -->





	




	<!-- 사용자 삭제 -->
	<!-- string인 경우 value / result type 없음. 조회가 없기에 -->
	<delete id="deleteUser" parameterType="string">
		DELETE users
		WHERE userid =
		#{value}
	</delete>
	
	
	
	<!-- 검색 -->
<!-- 검색 -->
<!-- 검색 -->

	<!-- 아이디로 찾기 -->
	<select id="idSearchUser" parameterType="String"
		resultType="userVo">
		SELECT * FROM users WHERE userid=#{userid}
	</select>
	
	<select id="idSearchUserCnt" parameterType="String" resultType="Integer">
		SELECT COUNT(*) FROM users WHERE userid LIKE #{userid}
	</select>
	
	<select id="idSearchUserPaging" parameterType="pageVoSearch"
		resultType="userVo">
		SELECT *
		FROM
		(SELECT ROWNUM rn, a.*
		FROM
		(SELECT *
		FROM users
		WHERE userid LIKE #{serachvalue}
		ORDER BY userid) a
		WHERE ROWNUM &lt;= #{page} * #{pageSize})
		WHERE rn BETWEEN (#{page}-1) * #{pageSize} +1 AND ${page} * #{pageSize}
	</select>

	<!-- 이름으로 찾기 -->
	<select id="nameSearchUser" parameterType="String"
		resultType="userVo">
		SELECT * FROM users WHERE usernm=#{usernm}
	</select>
	<select id="nameSearchUserCnt" parameterType="String"
		resultType="Integer">
		SELECT COUNT(*) FROM users WHERE usernm LIKE #{usernm}
	</select>
	<select id="nameSearchUserPaging" parameterType="pageVoSearch"
		resultType="userVo">
		SELECT *
		FROM
		(SELECT ROWNUM rn, a.*
		FROM
		(SELECT *
		FROM users
		WHERE usernm LIKE #{serachvalue}
		ORDER BY userid) a
		WHERE ROWNUM &lt;= #{page} * #{pageSize})
		WHERE rn BETWEEN (#{page}-1) * #{pageSize} +1 AND ${page} * #{pageSize}
	</select>

	<!-- 별명으로 찾기 -->
	<select id="aliasSearchUser" parameterType="String"
		resultType="userVo">
		SELECT * FROM users WHERE alias=#{alias}
	</select>
	<select id="aliasSearchUserCnt" parameterType="String"
		resultType="Integer">
		SELECT COUNT(*) FROM users WHERE alias LIKE #{alias}
	</select>
	<select id="aliasSearchUserPaging" parameterType="pageVoSearch"
		resultType="userVo">
		SELECT *
		FROM
		(SELECT ROWNUM rn, a.*
		FROM
		(SELECT *
		FROM users
		WHERE alias LIKE #{serachvalue}
		ORDER BY userid) a
		WHERE ROWNUM &lt;= #{page} * #{pageSize})
		WHERE rn BETWEEN (#{page}-1) * #{pageSize} +1 AND ${page} * #{pageSize}
	</select>

	
	

</mapper>

