<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fsurpports">

	<!-- ggy_20210306 : 영농일지 전체 리스트 조회 -->
	<select id="selectAllFsurpportList" resultType="farmdiaryVo">
		select f.f_diary_no, f.writer, f.my_simple_code, 
		    f.content, f.reg_dt, f.weather, f.low_temp, 
		    f.high_temp, f.rainfall, f.humid, 
		    f.yield, f.area, files.file_nm file_nm, 
		    c.code_nm b_type_code, co.code_nm w_step_code, cod.code_nm item_code
		from farmdiary f
		JOIN codes c
		ON f.b_type_code = c.code_no
		JOIN codes co
		ON f.w_step_code = co.code_no
		JOIN codes cod
		ON f.item_code = cod.code_no
		JOIN files files
		ON f.file_no = files.file_no
		where f.use_yn = 'Y'
		and c.use_yn = 'Y'
		and co.use_yn = 'Y'
		and cod.use_yn = 'Y'
		and files.use_yn ='Y'
	</select>

	<!-- ggy_20210306 : code 품목 리스트 조회. -->
	<select id="selectAllItem_codeList" resultType="codesVo">
		select *
		from codes
		where parent_code = '100'
		or parent_code = '200'
		or parent_code = '300'
		or parent_code = '400'
		and use_yn = 'Y'
	</select>

	<!-- ggy_20210306 : code 작업단계 리스트 조회. -->
	<select id="selectAllW_step_codeList" resultType="codesVo">
		SELECT *
		FROM
		codes
		WHERE parent_code = '1'
		OR parent_code = '2'
		OR parent_code = '3'
		OR parent_code = '4'
		OR parent_code = '5'
		OR parent_code = '6'
		OR parent_code = '7'
		AND use_yn = 'Y'
	</select>

	<!-- ggy_20210306 : code 사업유형단계 리스트 조회. -->
	<select id="selectAllB_type_codeList" resultType="codesVo">
		SELECT *
		FROM
		codes
		WHERE parent_code = 'b'
		AND use_yn = 'Y'
	</select>
	
	<!-- ggy_20210306 : mysimplecode 내가 등록한 간편 등록 리스트 조회. -->
	<select id="selectMySimpleCodeList" resultType="mySimpleCodeVo"
										parameterType="String">
		select *
		from mysimplecode
		where owner = #{owner }
		and use_yn = 'Y'
	</select>
	
	
	<!-- ggy_20210305 : mysimplecode 내가 등록한 간편 등록 조회해서 화면에 배치. -->
	<select id="selectMySimpleCodeInfo" parameterType="mySimpleCodeVo"
		resultType="mySimpleCodeVo">
		
		SELECT my.my_simple_code, my.owner, 
		c.code_nm item_code, co.code_nm b_type_code, my.code_alias, my.area
		FROM mysimplecode my
		JOIN codes c
		ON my.item_code = c.code_no 
		JOIN codes co
		ON my.b_type_code = co.code_no
		where my.owner = #{owner }
		and my.my_simple_code = #{my_simple_code }
		and my.use_yn = 'Y'
		and c.use_yn = 'Y'
		and co.use_yn = 'Y'
		
	</select>
	
	<!-- ggy_20210308 : mysimplecode code_alias 등록을 위해 사업 유형 조회. -->
	<select id="selectB_type_code_no" parameterType="String"
		resultType="codesVo">
		
		SELECT *
		FROM codes
		where code_no = #{code_no }
		
	</select>
	
	<!-- ggy_20210308 : mysimplecode code_alias 등록을 위해 품목 조회. -->
	<select id="selectItem_type_code_no" parameterType="String"
		resultType="codesVo">
		
		SELECT *
		FROM codes
		where code_no = #{code_no }
		
	</select>
	
	<!-- ggy_20210308 : mysimplecode에 나의 간편등록 내용물을 등록 -->
	<insert id="registMySimpleCode" parameterType="mySimpleCodeVo">
		insert into mysimplecode values(seq_mysimplecode.NEXTVAL, #{owner },
										#{item_code }, #{b_type_code },
										#{code_alias }, #{area }, 'Y')
	</insert>
	
	<!-- ggy_20210306 : 페이징 처리하여 영농일지 검색 조회 -->
	<select id="searchAllFarmdiaryList" resultType="farmdiaryVo"
		parameterType="farmdiaryVo">
		
		SELECT
		f.f_diary_no, f.writer, f.content, f.reg_dt,
		f.weather, f.low_temp, f.high_temp, f.rainfall, f.humid,
		f.yield,
		f.area, files.file_nm file_nm, c.code_nm b_type_code, co.code_nm
		w_step_code, cod.code_nm item_code
		FROM farmdiary f
		JOIN codes c
		ON
		f.b_type_code = c.code_no
		JOIN codes co
		ON
		f.w_step_code = co.code_no
		JOIN
		codes cod
		ON f.item_code = cod.code_no
		JOIN files files
		ON f.file_no =
		files.file_no
		where f.reg_dt &gt;=
		TO_DATE(#{startDate }, 'YYYY-MM-DD')
		AND f.reg_dt &lt; TO_DATE(#{endDate }, 'YYYY-MM-DD')+1
		OR f.item_code = #{item_code }
		OR f.w_step_code = #{w_step_code }
        AND f.use_yn = 'Y'
        AND c.use_yn = 'Y'
        AND co.use_yn = 'Y'
        AND cod.use_yn = 'Y'
        AND files.use_yn = 'Y'
		ORDER BY f.reg_dt desc
		
	</select>

	<!-- 등록된 영농일지 보는거 03/04 (경찬) -->
	<select id="fsurCount" parameterType="String"
		resultType="Integer">
		SELECT count(*)
		FROM farmdiary
		WHERE writer = #{user_id}
	</select>

	<!-- ggy_20210306 : 해당 영농일지 조회 -->
	<select id="selectFarmdiaryInfo" resultType="farmdiaryVo"
		parameterType="int">
		SELECT
		f.f_diary_no, f.writer, f.content,
		f.reg_dt,
		f.weather, f.low_temp,
		f.high_temp, f.rainfall, f.humid,
		f.yield, f.area, files.file_nm file_nm, f.file_no,
		c.code_nm b_type_code, co.code_nm
		w_step_code,
		cod.code_nm item_code
		FROM farmdiary f
		JOIN codes c
		ON f.b_type_code = c.code_no
		JOIN codes co
		ON f.w_step_code = co.code_no
		JOIN codes cod
		ON f.item_code = cod.code_no
		JOIN files files
		ON f.file_no = files.file_no
		WHERE f.f_diary_no = #{f_diary_no }
	</select>
	
	<!-- ggy_20210308 : 일지 등록을 위해 일지 정보 가져오기 -->
	<select id="selectMySimpleCode_noInfo" resultType="mySimpleCodeVo"
		parameterType="mySimpleCodeVo">
		SELECT *
		FROM mysimplecode
		WHERE owner = #{owner }
		and my_simple_code = #{my_simple_code }
	</select>
	
	<!-- ggy_20210309 : 일지 등록때 파일 있으면 파일 등록 -->
	<insert id="registFiles" parameterType="filesVo" >
		
		<selectKey keyProperty = "file_no" resultType="int" order="BEFORE">
			select seq_files.NEXTVAL from dual
		</selectKey>
		
		
		INSERT INTO files VALUES(
		#{file_no }, #{file_nm },
		#{file_path }, 'Y')
		
	</insert>

	<!-- ggy_20210306 : 일지 등록을 위한 등록된 파일 정보 가져오기 -->
	<select id="selectFilesInfo" resultType="filesVo"
		parameterType="int">
		SELECT *
		FROM files
		WHERE file_no = #{file_no }
	</select>

	<!-- ggy_20210306 : 일지 등록 -->
	<insert id="registFarmdiary" parameterType="filesVo">
		INSERT INTO farmdiary
		VALUES(seq_farmdiary.NEXTVAL,
		#{writer }, #{my_simple_code }, #{content },
		sysdate, #{weather }, #{low_temp },
		#{high_temp }, #{rainfall }, #{humid },
		#{yield }, #{area }, #{file_no }, 'Y',
		#{b_type_code }, #{w_step_code }, #{item_code })
	</insert>
</mapper>